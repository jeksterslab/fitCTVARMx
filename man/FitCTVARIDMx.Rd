% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/fitCTVARMx-fit-ct-var-id-mx.R
\name{FitCTVARIDMx}
\alias{FitCTVARIDMx}
\title{Fit the First Order Continuous-Time Vector Autoregressive Model by ID}
\usage{
FitCTVARIDMx(
  data,
  observed,
  id,
  time,
  phi_start = NULL,
  phi_lbound = NULL,
  phi_ubound = NULL,
  sigma_diag = TRUE,
  sigma_start = NULL,
  sigma_lbound = NULL,
  sigma_ubound = NULL,
  theta_fixed = TRUE,
  theta_start = NULL,
  theta_lbound = NULL,
  theta_ubound = NULL,
  mu0_fixed = TRUE,
  mu0_start = NULL,
  mu0_lbound = NULL,
  mu0_ubound = NULL,
  sigma0_fixed = TRUE,
  sigma0_diag = TRUE,
  sigma0_start = NULL,
  sigma0_lbound = NULL,
  sigma0_ubound = NULL,
  try = 1000,
  ncores = NULL
)
}
\arguments{
\item{data}{Data frame.
A data frame object of data for potentially
multiple subjects that contain
a column of subject ID numbers
(i.e., an ID variable), and
at least one column of observed values.}

\item{observed}{Character vector.
A vector of character strings
of the names of the observed variables in the data.}

\item{id}{Character string.
A character string of the name of the ID variable in the data.}

\item{time}{Character string.
A character string of the name of the TIME variable in the data.}

\item{phi_start}{Numeric matrix.
Optional starting values for \code{phi}.}

\item{phi_lbound}{Numeric matrix.
Optional lower bound for \code{phi}.}

\item{phi_ubound}{Numeric matrix.
Optional upper bound for \code{phi}.}

\item{sigma_diag}{Logical.
If \code{sigma_diag = TRUE},
\code{sigma} is a diagonal matrix.}

\item{sigma_start}{Numeric matrix.
Optional starting values for \code{sigma}.}

\item{sigma_lbound}{Numeric matrix.
Optional lower bound for \code{sigma}.}

\item{sigma_ubound}{Optional upper bound for \code{sigma}.}

\item{theta_fixed}{Logical.
If \code{theta_fixed = TRUE},
the measurement error matrix \code{theta} is fixed to zero.
If \code{theta_fixed = FALSE},
estimate the diagonal measurement error matrix \code{theta}.}

\item{theta_start}{Optional starting values for \code{theta}.
Ignored if \code{theta_fixed = TRUE}.}

\item{theta_lbound}{Optional lower bound for \code{theta}.
Ignored if \code{theta_fixed = TRUE}.}

\item{theta_ubound}{Optional upper bound for \code{theta}.
Ignored if \code{theta_fixed = TRUE}.}

\item{mu0_fixed}{Logical.
If \code{mu0_fixed = TRUE},
initial mean vector \code{mu0} is fixed.
If \code{mu0_fixed = FALSE},
initial mean vector \code{mu0} is estimated.}

\item{mu0_start}{Optional starting values for \code{mu0}.
If \code{mu0_fixed = TRUE}, \code{mu0_start} will be used as fixed values.
If \code{mu0_fixed = FALSE}, \code{mu0_start} will be used as starting values.}

\item{mu0_lbound}{Optional lower bound for \code{mu0}.
Ignored if \code{mu0_fixed = TRUE}.}

\item{mu0_ubound}{Optional upper bound for \code{mu0}.
Ignored if \code{mu0_fixed = TRUE}.}

\item{sigma0_fixed}{Logical.
If \code{sigma0_fixed = TRUE},
initial mean vector \code{sigma0} is fixed.
If \code{sigma0_fixed = FALSE},
initial mean vector \code{sigma0} is estimated.}

\item{sigma0_diag}{Logical.
If \code{sigma0_diag = TRUE},
\code{sigma0} is a diagonal matrix.}

\item{sigma0_start}{Optional starting values for \code{sigma0}.
If \code{sigma0_fixed = TRUE}, \code{sigma0_start} will be used as fixed values.
If \code{sigma0_fixed = FALSE}, \code{sigma0_start} will be used as starting values.}

\item{sigma0_lbound}{Optional lower bound for \code{sigma0}.
Ignored if \code{sigma0_fixed = TRUE}.}

\item{sigma0_ubound}{Optional upper bound for \code{sigma0}.
Ignored if \code{sigma0_fixed = TRUE}.}

\item{try}{Positive integer.
Number of extra optimization tries.}

\item{ncores}{Positive integer.
Number of cores to use.}
}
\description{
Fit the First Order Continuous-Time Vector Autoregressive Model by ID
}
\examples{
\dontrun{
# Generate data using the simStateSpace package------------------------------
set.seed(42)
phi_mu <- matrix(
  data = c(
    -0.357, 0.771, -0.450,
    0.0, -0.511, 0.729,
    0, 0, -0.693
  ),
  nrow = 3
)
phi_sigma <- diag(3 * 3)
phi <- simStateSpace::SimPhiN(
  n = 5,
  phi = phi_mu,
  vcov_phi_vec_l = t(chol(phi_sigma))
)
sim <- simStateSpace::SimSSMOUIVary(
  n = 5,
  time = 100,
  delta_t = 0.10,
  mu0 = list(rep(x = 0, times = 3)),
  sigma0_l = list(t(chol(diag(3)))),
  mu = list(rep(x = 0, times = 3)),
  phi = phi,
  sigma_l = list(t(chol(diag(3)))),
  nu = list(rep(x = 0, times = 3)),
  lambda = list(diag(3)),
  theta_l = list(matrix(data = 0, nrow = 3, ncol = 3))
)
data <- as.data.frame(sim)

# Fit the model--------------------------------------------------------------
library(fitCTVARMx)
fit <- FitCTVARIDMx(
  data = data,
  observed = c("y1", "y2", "y3"),
  id = "id"
)
print(fit)
summary(fit)
coef(fit)
vcov(fit)
}

}
\seealso{
Other CTVAR Functions: 
\code{\link{FitCTVARMx}()}
}
\author{
Ivan Jacob Agaloos Pesigan
}
\concept{CTVAR Functions}
\keyword{fit}
\keyword{fitCTVARMx}
